package org.future.projectManagement.service.imp;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.future.projectManagement.bean.College;
import org.future.projectManagement.bean.Instructor;
import org.future.projectManagement.bean.Project;
import org.future.projectManagement.bean.Student;
import org.future.projectManagement.dao.ProjectDao;
import org.future.projectManagement.service.ProjectService;
import org.future.projectManagement.utils.QueryResult;
import org.springframework.stereotype.Component;
@Component
public class ProjectServiceImp implements ProjectService{
	
	private ProjectDao projectDao;
	
	public ProjectDao getProjectDao() {
		return projectDao;
	}
	@Resource
	public void setProjectDao(ProjectDao projectDao) {
		this.projectDao = projectDao;
	}
	/*添加一个项目**/
	public void add(Project project){
		projectDao.add(project);
	}
	/*修改项目申报**/
	@Override
	public void update(Project project) {
		projectDao.Update(project);
		
	}
	/*根据id查找项目**/
	@Override
	public Project find(Class<Project> project, Integer id) {
		System.out.println(projectDao);
		return projectDao.find(project, id);
		
	}
	
	public QueryResult<Project> getQueryResult(Class<Project> entityClass,Object[] parameters,
			String where, LinkedHashMap<String, String> orderBy){
		return projectDao.getQueryResult(Project.class, parameters, where, orderBy);
	}
	@Override
	public void prepare(Student student, HttpServletRequest request) {
		//查询所有和登陆学生一个院的学生
		List<Object> parameters = new ArrayList<Object>();
		StringBuffer where = new StringBuffer();
		parameters.add(student.getCollege());
		where.append("o.college = ?");
		
		LinkedHashMap<String,String> orderBy = new LinkedHashMap<String,String>();
		orderBy.put("name", "asc");
		
		Student fakeStu = new Student();
		fakeStu.setStudentNo("000");
		fakeStu.setName("无");
		QueryResult<Student> qrStu = projectDao.getQueryResult(Student.class, 
																parameters.toArray(),
															where.toString(), orderBy);
		//模拟一个假的姓名为无的学生添加到集合中	
		qrStu.getResults().add(0, fakeStu);
		Map<String,String> members = new LinkedHashMap<String,String>();
		for(Student member:qrStu.getResults()){
			members.put(member.getStudentNo(), member.getName());
		}
		request.setAttribute("members",members);
		request.setAttribute("membertotal", project.getProjectMembers().size());
		
		//查询出所有的指导老师
		QueryResult<Instructor> qrIns = instructorService.getQueryResult(Instructor.class,
				parameters.toArray(), where.toString(), orderBy);
		Map<String,String> instructors = new HashMap<String,String>();
		
		//模拟一个假指导老师放到map集合最前面
		Instructor fakeIns = new Instructor();
		fakeIns.setJobNumber("000");
		fakeIns.setName("无");
		qrIns.getResults().add(0,fakeIns);
		
		
		for(Instructor instructor:qrIns.getResults()){
			instructors.put(instructor.getJobNumber(), instructor.getName());
		}
		this.getRequest().setAttribute("instructors", instructors);
		this.getRequest().setAttribute("instructortotal", project.getInstructors().size());
		//查询出所有的院系
		where = new StringBuffer();
		parameters.clear();
		
		QueryResult<College> qrCol = collegeService.getQueryResult(College.class);
		
		Map<Integer,String> colleges = new HashMap<Integer,String>();
		for(College col:qrCol.getResults()){
			colleges.put(col.getCollegeId(), col.getName());
		}
		this.getRequest().setAttribute("colleges", colleges);
		
	}
	
}
